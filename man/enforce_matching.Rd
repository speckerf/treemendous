% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enforce_matching.R
\name{enforce_matching}
\alias{enforce_matching}
\title{Enforce Matching for Unmatched Species According to a Specified Backbone}
\usage{
enforce_matching(df, backbone, target_df = NULL, max_iter = 3)
}
\arguments{
\item{df}{\code{tibble} which is the output of \code{matching()} or \code{sequential_matching()} and therefor contains the columns \code{Matched.Genus} and \code{Matched.Species}. May contain additional columns, which will be ignored.}

\item{backbone}{specifies which backbone is used: needs to be one of \code{c('BGCI', 'WCVP', 'WFO', 'GBIF')}.}

\item{target_df}{is used if the user wants to provide a custom target dataset. The parameter is intended only for compatibility with the function translate_trees and should not be directly used.}

\item{max_iter}{maximum distance (depth) in the graph for two species to be successfully enforce matched.}
}
\value{
A \code{tibble} with matched species in \code{Matched.Genus} and \code{Matched.Species}.
Along with the process information of \code{matching()}, the function returns the logical column \code{enforced_matched}, stating whether the species was successfully matched by \code{enforce_matching()}, and the distance in the neighborhood graph \code{g}.
}
\description{
\code{enforce_matching()} can be called after \code{matching()}.
The function tries to match all unmatched species, by making use of the synonym-accepted relations present in the backbones \code{WFO}, \code{WCVP} and \code{GBIF}.
A graph connecting all synonyms with accepted species is created and used to look for matches at increasing distance in this graph according to the desired backbone.
}
\details{
This function is useful when you want to increase the proportion of matched species against a single target backbone.
The package \emph{igraph} is used to create an undirected graph \code{g} connecting all synonyms with accepted species according the databases \code{WFO}, \code{WCVP} and \code{GBIF}.
Vertices represent species names, and edges represent synonym-accepted relations between two species according to at least one backbone.
Additionally, two species names that can be matched via fuzzy-matching (maximum string-dist of two) are also connected with an edge.
To find these, each species name is matched against the whole database (excluding its own name).

From the output of \code{\link[=matching]{matching()}}, all unmatched species are matched to all three backbones via \code{matching(c('WFO', 'WCVP', 'GBIF'))}.
The functions checks vertices that are at most \code{max_iter} (default = 3) edges apart in the graph \code{g}.
For multiple matches, the algorithm always selects the first match, i.e. the target vertex with lower \code{ID_matched} in \code{Treemendous.Trees} to ensure reproducibility.
By default, the function allows a maximum depth of three steps to search for an match in the target backbone, with the output field \code{enforced_matching_dist} denoting the depth of the match for each species (1, 2, or 3).
Filtering by this column allows the user to be more restrictive (depth $=1$), at the cost of incorrectly missing some matches, or be increasingly permissive with the matches (depth $=2$ or $3$), at the cost of potentially lumping species together.
Depending on the application, these different scenarios may be more or less preferable, and can be selected on a case-by-case basis.
}
\examples{
output <- iucn \%>\% matching('BGCI') \%>\% enforce_matching('BGCI')
output \%>\% summarize_output()
}
